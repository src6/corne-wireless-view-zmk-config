/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <290>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <6 18 30 39 40 7 8 9 10 11 19 20 21 22 23 31 32 33 34 35 41>;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <290>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 2 3 4 5>;
        };
    };

    macros {
        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C)>;
            label = "COPY";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(V)>;
            label = "PASTE";
        };

        cut: cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(X)>;
            label = "CUT";
        };

        undo: undo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(Z)>;
            label = "UNDO";
        };

        redo: redo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(Y)>;
            label = "REDO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "ALPHA";
            bindings = <
&kp ESCAPE  &kp Q            &kp W            &kp F                &kp P              &kp B      &kp J        &kp L               &kp U                 &kp Y             &kp SEMICOLON  &kp LA(TAB)
&kp LCTRL   &hml LEFT_GUI A  &hml LEFT_ALT R  &hml LEFT_CONTROL S  &hml LEFT_SHIFT T  &kp G      &kp M        &hmr RIGHT_SHIFT N  &hmr RIGHT_CONTROL E  &hmr RIGHT_ALT I  &hmr RGUI O    &kp SQT
&kp LSHFT   &kp Z            &kp X            &kp C                &kp D              &kp V      &kp K        &kp H               &kp COMMA             &kp DOT           &kp FSLH       &key_repeat
                                              &lt 2 ESCAPE         &lt 1 SPACE        &kp TAB    &lt 5 ENTER  &lt 4 BACKSPACE     &lt 3 DEL
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "NAV";
            bindings = <
&trans  &trans    &trans    &trans            &trans          &trans       &redo         &paste          &copy           &cut          &undo            &trans
&trans  &kp LGUI  &kp LALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans       &kp CAPSLOCK  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&trans  &trans    &trans    &trans            &trans          &trans       &kp INSERT    &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &trans
                            &trans            &trans          &kp SPACE    &kp RET       &kp BACKSPACE   &kp DEL
            >;
        };

        media {
            bindings = <
&trans      &trans        &trans        &trans            &trans          &trans          &trans      &trans      &trans        &trans           &trans      &trans
&trans      &kp LGUI      &kp LALT      &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans          &trans      &kp C_PREV  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_NEXT  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3    &bt BT_SEL 4    &trans      &trans      &trans        &trans           &trans      &trans
                                        &trans            &trans          &trans          &kp C_STOP  &kp C_PP    &kp C_MUTE
            >;

            label = "MEDIA";
        };

        fun {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8              &kp F9     &kp PRINTSCREEN    &trans  &trans           &trans            &trans        &trans        &trans
&trans  &kp F11  &kp F4  &kp F5              &kp F6     &kp SCROLLLOCK     &trans  &kp RIGHT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &trans
&trans  &kp F10  &kp F1  &kp F2              &kp F3     &kp PAUSE_BREAK    &trans  &trans           &trans            &trans        &trans        &trans
                         &kp K_CONTEXT_MENU  &kp SPACE  &kp TAB            &trans  &trans           &trans
            >;

            label = "FUNCTION";
        };

        num {
            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT     &trans  &trans           &trans             &trans         &trans    &trans
&trans  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL    &trans  &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RGUI  &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH     &trans  &trans           &trans             &trans         &trans    &trans
                           &kp DOT  &kp N0  &kp MINUS    &trans  &trans           &trans
            >;

            label = "NUM";
        };

        Sym {
            bindings = <
&trans  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &trans  &trans      &trans     &trans         &trans    &trans
&trans  &kp COLON       &kp DOLLAR       &kp PERCENT           &kp CARET              &kp PLUS           &trans  &kp RSHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RGUI  &trans
&trans  &kp TILDE       &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp PIPE           &trans  &trans      &trans     &trans         &trans    &trans
                                         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE     &trans  &trans      &trans
            >;

            label = "SYM";
        };
    };
};
